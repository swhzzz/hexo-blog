<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>swhzzz的前端之旅</title>
  
  <link href="/hexo-blog/atom.xml" rel="self"/>
  
  <link href="https://swhzzz.github.io/"/>
  <updated>2017-08-24T02:01:48.000Z</updated>
  <id>https://swhzzz.github.io/</id>
  
  <author>
    <name>swh</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常见的设计模式</title>
    <link href="https://swhzzz.github.io/2017/08/23/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>https://swhzzz.github.io/2017/08/23/设计模式/</id>
    <published>2017-08-23T11:23:28.000Z</published>
    <updated>2017-08-24T02:01:48.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>工厂模式</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">function Person(name,age)&#123;</div><div class="line">    let o=&#123;&#125;</div><div class="line">    o.name=name</div><div class="line">    o.age=age</div><div class="line">    o.sayName=function()&#123;</div><div class="line">        console.log(this.name)</div><div class="line">    &#125;</div><div class="line">    return o;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li>构造函数模式</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">function Person(name,age)&#123;</div><div class="line">    this.name=name</div><div class="line">    this.age=age</div><div class="line">&#125;</div><div class="line">Person.prototype.sayName=function()&#123;</div><div class="line">    console.log(this.name)</div><div class="line">&#125;</div><div class="line">let p1 = new Person(&apos;swh&apos;,23)</div></pre></td></tr></table></figure>
<ol>
<li>单例模式<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">let People=(function()&#123;</div><div class="line">    var instance </div><div class="line">    function init(name)&#123;</div><div class="line">        return &#123;</div><div class="line">            name: name</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return &#123;</div><div class="line">        createPeople: function(name)&#123;</div><div class="line">            if(!instance)&#123;</div><div class="line">                instance=init(name)</div><div class="line">            &#125;</div><div class="line">            return instance</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;)()</div><div class="line">People.createPeople(&apos;swh&apos;) // &#123;name: &apos;swh&apos;&#125;</div><div class="line">People.createPeople(&apos;sls&apos;) // &#123;name: &apos;sls&apos;&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>单例模式一旦被创建之后，返回值就不再发生变化</p>
<ol>
<li>模块模式</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">var People=(function()&#123;</div><div class="line">    var name=&apos;sls&apos;</div><div class="line">    function sayName()&#123;</div><div class="line">        console.log(name)</div><div class="line">    &#125;</div><div class="line">    return &#123;</div><div class="line">        name: name,</div><div class="line">        sayName: sayName</div><div class="line">    &#125;</div><div class="line">&#125;)()</div></pre></td></tr></table></figure>
<p>通过闭包的方式，导出一个模块</p>
<ol>
<li>订阅发布模式</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"> var EventCenter = (function()&#123;</div><div class="line">  var events = &#123;&#125;;</div><div class="line">  /*</div><div class="line">    &#123;</div><div class="line">      my_event: [&#123;handler: function(data)&#123;xxx&#125;&#125;, &#123;handler: function(data)&#123;yyy&#125;&#125;]</div><div class="line">    &#125;</div><div class="line">  */</div><div class="line">  function on(evt, handler)&#123;</div><div class="line">    events[evt] = events[evt] || [];</div><div class="line">    events[evt].push(&#123;</div><div class="line">      handler: handler</div><div class="line">    &#125;);</div><div class="line">  &#125;</div><div class="line">  function fire(evt, args)&#123;</div><div class="line">    if(!events[evt])&#123;</div><div class="line">      return;</div><div class="line">    &#125;</div><div class="line">    for(var i=0; i&lt;events[evt].length; i++)&#123;</div><div class="line">      events[evt][i].handler(args);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  return &#123;</div><div class="line">    on: on,</div><div class="line">    fire: fire</div><div class="line">  &#125;</div><div class="line">&#125;)();</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;工厂模式&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/di
    
    </summary>
    
    
      <category term="博客" scheme="https://swhzzz.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>test-article</title>
    <link href="https://swhzzz.github.io/2017/08/21/test-article/"/>
    <id>https://swhzzz.github.io/2017/08/21/test-article/</id>
    <published>2017-08-21T05:16:37.000Z</published>
    <updated>2017-08-21T05:17:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="This-is-a-test"><a href="#This-is-a-test" class="headerlink" title="This is a test."></a>This is a test.</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;This-is-a-test&quot;&gt;&lt;a href=&quot;#This-is-a-test&quot; class=&quot;headerlink&quot; title=&quot;This is a test.&quot;&gt;&lt;/a&gt;This is a test.&lt;/h1&gt;
    
    </summary>
    
    
      <category term="test" scheme="https://swhzzz.github.io/tags/test/"/>
    
  </entry>
  
</feed>
