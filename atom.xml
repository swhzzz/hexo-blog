<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>swhzzz的前端之旅</title>
  
  <link href="/hexo-blog/atom.xml" rel="self"/>
  
  <link href="https://swhzzz.github.io/"/>
  <updated>2017-08-30T15:48:40.000Z</updated>
  <id>https://swhzzz.github.io/</id>
  
  <author>
    <name>swh</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue生命周期</title>
    <link href="https://swhzzz.github.io/2017/08/30/Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    <id>https://swhzzz.github.io/2017/08/30/Vue生命周期/</id>
    <published>2017-08-30T14:15:30.000Z</published>
    <updated>2017-08-30T15:48:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="浅谈Vue生命周期"><a href="#浅谈Vue生命周期" class="headerlink" title="浅谈Vue生命周期"></a>浅谈Vue生命周期</h1><p>每个vue实例在被创建之前都要经过初始化。例如观测数据，初始化事件，挂载Dom，同时data变化时，更新Dom，在这一系列过程中有着一些钩子，在完成某些特定的条件时，便会触发，我们称它为钩子函数。一个实例从创建到销毁的过程则称之为实例的生命周期。</p>
<p>这是一张vue生命周期的图解，原作者@老马自嘲<br><a href="http://images.cnblogs.com/cnblogs_com/fly_dragon/276813/o_lifecycle-%E6%A0%87%E6%B3%A8%E7%89%88%E6%9C%AC.png" target="_blank" rel="external">生命周期图解</a></p>
<p>下面介绍一下vue的钩子函数：</p>
<ul>
<li><code>beforeCreate</code><br>beforeCreate发生在<code>new Vue()</code>之后，但在还没有观测数据之前调用</li>
<li><code>created</code><br>在观测数据以及vue内部初始化事件后调用created钩子</li>
<li><code>beforeMount</code><br>开始挂载钩子，但是还没有生成HTML到页面上，此时标签内任然是Mustach</li>
<li><code>mounted</code><br>挂载完成，html渲染到页面上，此时可以用axios发送一些ajax请求</li>
<li><code>beforeUpdate</code><br>在数据更新之前调用的钩子</li>
<li><code>updated</code><br>数据更新之后调用,之后多次更新数据任然会调用此钩子</li>
<li><code>beforeDestroy</code><br>vue实例销毁前执行</li>
<li><code>destroyed</code><br>vue实例销毁后执行，此后vue的watcher，组件，以及时间都被卸载，不能使用，但是data任然存在</li>
</ul>
<p>最后理一遍思路，先new Vue()创建一个实例，调用beforeCreate钩子，观测数据，初始化事件，调用created钩子，判断el是否存在，若不存在则等到vm.mount(el)被调用才继续往下执行，若存在，则继续判断template是否存在，若template存在，则把data和template结合，但是不放到页面上，若不存在则使用el的outerHTML作为html，接着调用beforeMount钩子，此时，页面上忍让是大胡子语法的标签，把结合的html放到页面上，调用mounted钩子。当数据发生变化时，先调用beforeUpdate钩子，虚拟Dom渲染数据，然后调用updated钩子。最后当destroy()被调用时，先执行destroy钩子，然后卸载组件，事件，watcher，再调用destroyed钩子，至此就是一个完整的vue生命周期。</p>
<p>下面是一个vue生命周期的例子</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line"></div><div class="line">&lt;head&gt;</div><div class="line">    &lt;title&gt;&lt;/title&gt;</div><div class="line">    &lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"https://cdn.jsdelivr.net/vue/2.1.3/vue.js"</span>&gt;&lt;/script&gt;</div><div class="line">&lt;<span class="regexp">/head&gt;</span></div><div class="line"><span class="regexp"></span></div><div class="line"><span class="regexp">&lt;body&gt;</span></div><div class="line"><span class="regexp"></span></div><div class="line"><span class="regexp">    &lt;div id="app"&gt;</span></div><div class="line"><span class="regexp">        &lt;p&gt;&#123;&#123; message &#125;&#125;&lt;/</span>p&gt;</div><div class="line">    &lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp"></span></div><div class="line"><span class="regexp">    &lt;script type="text/</span>javascript<span class="string">"&gt;</span></div><div class="line"><span class="string">        var app = new Vue(&#123;</span></div><div class="line"><span class="string">            el: '#app',</span></div><div class="line"><span class="string">            data: &#123;</span></div><div class="line"><span class="string">                message: "</span>monkeyWang is boy<span class="string">"</span></div><div class="line"><span class="string">            &#125;,</span></div><div class="line"><span class="string">            beforeCreate: function() &#123;</span></div><div class="line"><span class="string">                console.group('beforeCreate 创建前状态===============》');</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>el     : <span class="string">" + this.$el); //undefined</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>data   : <span class="string">" + this.$data); //undefined </span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>message: <span class="string">" + this.message)</span></div><div class="line"><span class="string">            &#125;,</span></div><div class="line"><span class="string">            created: function() &#123;</span></div><div class="line"><span class="string">                console.group('created 创建完毕状态===============》');</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>el     : <span class="string">" + this.$el); //undefined</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>data   : <span class="string">" + this.$data); //已被初始化 </span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>message: <span class="string">" + this.message); //已被初始化</span></div><div class="line"><span class="string">            &#125;,</span></div><div class="line"><span class="string">            beforeMount: function() &#123;</span></div><div class="line"><span class="string">                console.group('beforeMount 挂载前状态===============》');</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>el     : <span class="string">" + (this.$el)); //已被初始化</span></div><div class="line"><span class="string">                console.log(this.$el);</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>data   : <span class="string">" + this.$data); //已被初始化  </span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>message: <span class="string">" + this.message); //已被初始化  </span></div><div class="line"><span class="string">            &#125;,</span></div><div class="line"><span class="string">            mounted: function() &#123;</span></div><div class="line"><span class="string">                console.group('mounted 挂载结束状态===============》');</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>el     : <span class="string">" + this.$el); //已被初始化</span></div><div class="line"><span class="string">                console.log(this.$el);</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>data   : <span class="string">" + this.$data); //已被初始化</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>message: <span class="string">" + this.message); //已被初始化 </span></div><div class="line"><span class="string">            &#125;,</span></div><div class="line"><span class="string">            beforeUpdate: function() &#123;</span></div><div class="line"><span class="string">                console.group('beforeUpdate 更新前状态===============》');</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>el     : <span class="string">" + this.$el);</span></div><div class="line"><span class="string">                console.log(this.$el);</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>data   : <span class="string">" + this.$data);</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>message: <span class="string">" + this.message);</span></div><div class="line"><span class="string">            &#125;,</span></div><div class="line"><span class="string">            updated: function() &#123;</span></div><div class="line"><span class="string">                console.group('updated 更新完成状态===============》');</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>el     : <span class="string">" + this.$el);</span></div><div class="line"><span class="string">                console.log(this.$el);</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>data   : <span class="string">" + this.$data);</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>message: <span class="string">" + this.message);</span></div><div class="line"><span class="string">            &#125;,</span></div><div class="line"><span class="string">            beforeDestroy: function() &#123;</span></div><div class="line"><span class="string">                console.group('beforeDestroy 销毁前状态===============》');</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>el     : <span class="string">" + this.$el);</span></div><div class="line"><span class="string">                console.log(this.$el);</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>data   : <span class="string">" + this.$data);</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>message: <span class="string">" + this.message);</span></div><div class="line"><span class="string">            &#125;,</span></div><div class="line"><span class="string">            destroyed: function() &#123;</span></div><div class="line"><span class="string">                console.group('destroyed 销毁完成状态===============》');</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>el     : <span class="string">" + this.$el);</span></div><div class="line"><span class="string">                console.log(this.$el);</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>data   : <span class="string">" + this.$data);</span></div><div class="line"><span class="string">                console.log("</span>%c%s<span class="string">", "</span>color:red<span class="string">", "</span>message: <span class="string">" + this.message)</span></div><div class="line"><span class="string">            &#125;</span></div><div class="line"><span class="string">        &#125;)</span></div><div class="line"><span class="string">    &lt;/script&gt;</span></div><div class="line"><span class="string">&lt;/body&gt;</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">&lt;/html&gt;</span></div></pre></td></tr></table></figure>
<p>本文参考链接：</p>
<p><a href="https://cn.vuejs.org/v2/guide/instance.html#实例生命周期" target="_blank" rel="external">Vue官方文档</a><br><a href="http://www.cnblogs.com/fly_dragon/p/6220273.html" target="_blank" rel="external">Vue入门系列</a><br><a href="https://www.zhihu.com/question/52917848" target="_blank" rel="external">知乎</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;浅谈Vue生命周期&quot;&gt;&lt;a href=&quot;#浅谈Vue生命周期&quot; class=&quot;headerlink&quot; title=&quot;浅谈Vue生命周期&quot;&gt;&lt;/a&gt;浅谈Vue生命周期&lt;/h1&gt;&lt;p&gt;每个vue实例在被创建之前都要经过初始化。例如观测数据，初始化事件，挂载Dom，同时
    
    </summary>
    
    
      <category term="vue" scheme="https://swhzzz.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>常见的设计模式</title>
    <link href="https://swhzzz.github.io/2017/08/23/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>https://swhzzz.github.io/2017/08/23/设计模式/</id>
    <published>2017-08-23T11:23:28.000Z</published>
    <updated>2017-08-24T02:21:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>1.工厂模式</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age</span>)</span>&#123;</div><div class="line">    <span class="keyword">let</span> o=&#123;&#125;</div><div class="line">    o.name=name</div><div class="line">    o.age=age</div><div class="line">    o.sayName=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> o;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2.构造函数模式</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name=name</div><div class="line">    <span class="keyword">this</span>.age=age</div><div class="line">&#125;</div><div class="line">Person.prototype.sayName=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</div><div class="line">&#125;</div><div class="line"><span class="keyword">let</span> p1 = <span class="keyword">new</span> Person(<span class="string">'swh'</span>,<span class="number">23</span>)</div></pre></td></tr></table></figure>
<p>3.单例模式</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> People=(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> instance </div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params">name</span>)</span>&#123;</div><div class="line">        <span class="keyword">return</span> &#123;</div><div class="line">            name: name</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        createPeople: <span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</div><div class="line">            <span class="keyword">if</span>(!instance)&#123;</div><div class="line">                instance=init(name)</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> instance</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;)()</div><div class="line">People.createPeople(<span class="string">'swh'</span>) <span class="comment">// &#123;name: 'swh'&#125;</span></div><div class="line">People.createPeople(<span class="string">'sls'</span>) <span class="comment">// &#123;name: 'sls'&#125;</span></div></pre></td></tr></table></figure>
<p>单例模式一旦被创建之后，返回值就不再发生变化</p>
<p>4.模块模式</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> People=(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> name=<span class="string">'sls'</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">sayName</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(name)</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        name: name,</div><div class="line">        sayName: sayName</div><div class="line">    &#125;</div><div class="line">&#125;)()</div></pre></td></tr></table></figure>
<p>通过闭包的方式，导出一个模块</p>
<p>5.订阅发布模式</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"> <span class="keyword">var</span> EventCenter = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">var</span> events = &#123;&#125;;</div><div class="line">  <span class="comment">/*</span></div><div class="line"><span class="comment">    &#123;</span></div><div class="line"><span class="comment">      my_event: [&#123;handler: function(data)&#123;xxx&#125;&#125;, &#123;handler: function(data)&#123;yyy&#125;&#125;]</span></div><div class="line"><span class="comment">    &#125;</span></div><div class="line"><span class="comment">  */</span></div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">on</span>(<span class="params">evt, handler</span>)</span>&#123;</div><div class="line">    events[evt] = events[evt] || [];</div><div class="line">    events[evt].push(&#123;</div><div class="line">      handler: handler</div><div class="line">    &#125;);</div><div class="line">  &#125;</div><div class="line">  <span class="function"><span class="keyword">function</span> <span class="title">fire</span>(<span class="params">evt, args</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(!events[evt])&#123;</div><div class="line">      <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;events[evt].length; i++)&#123;</div><div class="line">      events[evt][i].handler(args);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> &#123;</div><div class="line">    on: on,</div><div class="line">    fire: fire</div><div class="line">  &#125;</div><div class="line">&#125;)();</div><div class="line">EventCenter.on(<span class="string">'hello'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'hello'</span>)</div><div class="line">&#125;)</div><div class="line">EventCenter.on(<span class="string">'hello'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'hello2'</span>)</div><div class="line">&#125;)</div><div class="line">EventCenter.fire(<span class="string">'hello'</span>) <span class="comment">// hello,hello2</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.工厂模式&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div
    
    </summary>
    
    
      <category term="博客" scheme="https://swhzzz.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
